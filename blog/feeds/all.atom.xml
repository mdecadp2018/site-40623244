<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>機械設計工程系 2018 Fall 分組網誌</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2018-10-22T00:00:00+08:00</updated><entry><title>2018 Fall Week7</title><link href="./2018-Fall-Project-Blog-w7.html" rel="alternate"></link><published>2018-10-22T00:00:00+08:00</published><updated>2018-10-22T00:00:00+08:00</updated><author><name>NFUMDE-40623244</name></author><id>tag:None,2018-10-22:./2018-Fall-Project-Blog-w7.html</id><summary type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;


&lt;h2&gt;課程倉儲&lt;/h2&gt;
&lt;p&gt;利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處:&lt;/p&gt;
&lt;p&gt;第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 &lt;a href="https://github.com/mdecourse/cp2018"&gt;cp github 倉儲&lt;/a&gt;外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料.&lt;/p&gt;
&lt;p&gt;第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 &lt;a href="https://mdecourse.github.io/cp2018/"&gt;cp 課程網站&lt;/a&gt;伺服.&lt;/p&gt;
&lt;p&gt;第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料.&lt;/p&gt;
&lt;h2&gt;該學習哪種程式語言?&lt;/h2&gt;
&lt;p&gt;C/C++、Python、Lua 或 Javascript?&lt;/p&gt;
&lt;p&gt;都可以.&lt;/p&gt;
&lt;p&gt;在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall Week6</title><link href="./2018-Fall-Project-Blog-w6.html" rel="alternate"></link><published>2018-10-15T00:00:00+08:00</published><updated>2018-10-15T00:00:00+08:00</updated><author><name>NFUMDE-40623244</name></author><id>tag:None,2018-10-15:./2018-Fall-Project-Blog-w6.html</id><summary type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;


&lt;h2&gt;課程倉儲&lt;/h2&gt;
&lt;p&gt;利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處:&lt;/p&gt;
&lt;p&gt;第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 &lt;a href="https://github.com/mdecourse/cp2018"&gt;cp github 倉儲&lt;/a&gt;外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料.&lt;/p&gt;
&lt;p&gt;第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 &lt;a href="https://mdecourse.github.io/cp2018/"&gt;cp 課程網站&lt;/a&gt;伺服.&lt;/p&gt;
&lt;p&gt;第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料.&lt;/p&gt;
&lt;h2&gt;該學習哪種程式語言?&lt;/h2&gt;
&lt;p&gt;C/C++、Python、Lua 或 Javascript?&lt;/p&gt;
&lt;p&gt;都可以.&lt;/p&gt;
&lt;p&gt;在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall Week5</title><link href="./2018-Fall-Project-Blog-w5.html" rel="alternate"></link><published>2018-10-08T00:00:00+08:00</published><updated>2018-10-08T00:00:00+08:00</updated><author><name>NFUMDE-40623244</name></author><id>tag:None,2018-10-08:./2018-Fall-Project-Blog-w5.html</id><summary type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;


&lt;h2&gt;課程倉儲&lt;/h2&gt;
&lt;p&gt;利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處:&lt;/p&gt;
&lt;p&gt;第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 &lt;a href="https://github.com/mdecourse/cp2018"&gt;cp github 倉儲&lt;/a&gt;外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料.&lt;/p&gt;
&lt;p&gt;第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 &lt;a href="https://mdecourse.github.io/cp2018/"&gt;cp 課程網站&lt;/a&gt;伺服.&lt;/p&gt;
&lt;p&gt;第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料.&lt;/p&gt;
&lt;h2&gt;該學習哪種程式語言?&lt;/h2&gt;
&lt;p&gt;C/C++、Python、Lua 或 Javascript?&lt;/p&gt;
&lt;p&gt;都可以.&lt;/p&gt;
&lt;p&gt;在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall Week4</title><link href="./2018-Fall-Project-Blog-w4.html" rel="alternate"></link><published>2018-10-01T00:00:00+08:00</published><updated>2018-10-01T00:00:00+08:00</updated><author><name>NFUMDE-40623244</name></author><id>tag:None,2018-10-01:./2018-Fall-Project-Blog-w4.html</id><summary type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;


&lt;h2&gt;課程倉儲&lt;/h2&gt;
&lt;p&gt;利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處:&lt;/p&gt;
&lt;p&gt;第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 &lt;a href="https://github.com/mdecourse/cp2018"&gt;cp github 倉儲&lt;/a&gt;外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料.&lt;/p&gt;
&lt;p&gt;第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 &lt;a href="https://mdecourse.github.io/cp2018/"&gt;cp 課程網站&lt;/a&gt;伺服.&lt;/p&gt;
&lt;p&gt;第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料.&lt;/p&gt;
&lt;h2&gt;該學習哪種程式語言?&lt;/h2&gt;
&lt;p&gt;C/C++、Python、Lua 或 Javascript?&lt;/p&gt;
&lt;p&gt;都可以.&lt;/p&gt;
&lt;p&gt;在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall Week3</title><link href="./2018-Fall-Project-Blog-w3.html" rel="alternate"></link><published>2018-09-24T00:00:00+08:00</published><updated>2018-09-24T00:00:00+08:00</updated><author><name>NFUMDE-40623244</name></author><id>tag:None,2018-09-24:./2018-Fall-Project-Blog-w3.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;中秋節放假&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall Week2</title><link href="./2018-Fall-Project-Blog-w2.html" rel="alternate"></link><published>2018-09-17T00:00:00+08:00</published><updated>2018-09-17T00:00:00+08:00</updated><author><name>NFUMDE-40623244</name></author><id>tag:None,2018-09-17:./2018-Fall-Project-Blog-w2.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;說明如何以 ShareX 取圖, 如何管理 CMSimfly 作業倉儲
Step1:依照Week1先去mde.tw領取個人倉儲&lt;/p&gt;
&lt;p&gt;Step2:利用 Settings 將內定 branch 設為 gh-pages&lt;/p&gt;
&lt;p&gt;Step3: git clone 作業倉儲至近端後, 著手將練習 Onshape 的各項過程資料存入 CMSimfly, Reveal.js 與 Pelican Blog 中&lt;/p&gt;
&lt;p&gt;*若要在圖片上加上有顏色的框,對LEO開啟Y:/tmp/40623244/cmsimfly.leo調整顏色粗細大小&lt;/p&gt;
&lt;p&gt;心得:第二週學習如何管理期中作業倉儲的網站內容以及投影片內容，每週必須放上Onshape Lesson的進度，一步步慢慢透過自學的方式，學會如何使用Onshape，這樣的方式也讓我們學會，自主學習很重要。&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall 分組網誌</title><link href="./2018-Fall-Project-Blog.html" rel="alternate"></link><published>2018-09-10T11:00:00+08:00</published><updated>2018-09-10T11:00:00+08:00</updated><author><name>NFUMDE</name></author><id>tag:None,2018-09-10:./2018-Fall-Project-Blog.html</id><summary type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 開始將網際內容管理、投影片與網誌進行整合.&lt;/p&gt;


&lt;h2&gt;課程倉儲&lt;/h2&gt;
&lt;p&gt;利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處:&lt;/p&gt;
&lt;p&gt;第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 &lt;a href="https://github.com/mdecourse/cp2018"&gt;cp github 倉儲&lt;/a&gt;外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料.&lt;/p&gt;
&lt;p&gt;第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 &lt;a href="https://mdecourse.github.io/cp2018/"&gt;cp 課程網站&lt;/a&gt;伺服.&lt;/p&gt;
&lt;p&gt;第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料.&lt;/p&gt;
&lt;h2&gt;該學習哪種程式語言?&lt;/h2&gt;
&lt;p&gt;C/C++、Python、Lua 或 Javascript?&lt;/p&gt;
&lt;p&gt;都可以.&lt;/p&gt;
&lt;p&gt;在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.&lt;/p&gt;</content><category term="2018Fall"></category></entry><entry><title>2018 Fall Week1</title><link href="./2018-Fall-Project-Blog-w1.html" rel="alternate"></link><published>2018-09-10T00:00:00+08:00</published><updated>2018-09-10T00:00:00+08:00</updated><author><name>NFUMDE-40623224</name></author><id>tag:None,2018-09-10:./2018-Fall-Project-Blog-w1.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;step1:建立一個新的倉庫,名字為自己的學號.github.io,權限設為公開&lt;/p&gt;
&lt;p&gt;step2:clone新的倉庫的網址&lt;/p&gt;
&lt;p&gt;step3:除了.git和README.md不能複製,其餘都複製在自己的資料夾&lt;/p&gt;
&lt;p&gt;step4:先看自己的狀態(git status)然後增加(git add),再提交(git commit -m "名稱")，推送的名稱為initial add&lt;/p&gt;
&lt;p&gt;step5:設定自己提交的email和名字&lt;/p&gt;
&lt;p&gt;step6:開啟近端(在批次檔中輸python wsgi.py)，進去https://localhost:8443修改40623244網站&lt;/p&gt;
&lt;p&gt;step7:修改完，再重複step4的步驟,再git push上傳&lt;/p&gt;
&lt;p&gt;Q&amp;amp;A:&lt;/p&gt;
&lt;p&gt;Q:什麼是Onshape?&lt;/p&gt;
&lt;p&gt;A:Onshape是一個現代化的CAD系統，可以消除設計僵局，幫助工程師做最好的工作。Onshape將高級建模工具和設計數據管理結合在一個安全的雲工作空間中，該工作空間已迅速成為全球數千家公司的主要CAD系統。&lt;/p&gt;
&lt;p&gt;Q:為什麼選擇Onshape?&lt;/p&gt;
&lt;p&gt;A:因為Onshape可以主動幫助我們並保護我們的知識產權，而它有七種不同的安全措施(即密碼保護訪問、雙因素認證、數據庫備份程序、專用服務器、通信安全、加密、第三方測試)。&lt;/p&gt;
&lt;p&gt;心得:原本忘記要如何使用github，但再重新接觸，加上聽老師解說之後，明白只是沿用一年級的時候所學過的東西，所以我想應該可以再次適應，但是這學期還多學了一個從來沒接觸過的軟件，名為"Onshape"，聽過老師稍微的介紹，才明白這是一套繪圖軟件的軟件，我想應該可很快的學會。&lt;/p&gt;</content><category term="2018Fall"></category></entry></feed>